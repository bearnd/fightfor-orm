---

- name: Update apt cache.
  apt:
    update_cache: yes
    cache_valid_time: 86400
  ignore_errors: true
  become: true

- name: Install PostgreSQL.
  include_role:
    name: geerlingguy.postgresql
  ignore_errors: true
  when: app_fightfor_orm.is_vagrant is defined and app_fightfor_orm.is_vagrant == True

#- name: Install apt dependencies.
#  apt:
#    name: "{{ item }}"
#    state: latest
#  with_items: "{{ app_fightfor_orm.dependencies_apt }}"
#  become: true

- name: Create service group.
  group:
    state: present
    name: "{{ app_fightfor_orm.group }}"
  become: true

- name: Create service user.
  user:
    state: present
    name: "{{ app_fightfor_orm.user }}"
    createhome: yes
    group: "{{ app_fightfor_orm.group }}"
    shell: "/bin/false"
  become: true

- name: Create application directories.
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ app_fightfor_orm.user }}"
    mode: 0755
  with_items:
    - "{{ app_fightfor_orm.share_dir }}"
    - "{{ app_fightfor_orm.config_dir }}"
    - "{{ app_fightfor_orm.run_dir }}"
    - "{{ app_fightfor_orm.log_dir }}"
  become: true

- name: Copy PostgreSQL configuration files.
  copy:
    src: "{{ item }}"
    dest: "//etc/postgresql/9.5/main/{{ item }}"
    owner: "postgres"
    mode: 0600
  with_items:
    - "pg_hba.conf"
    - "postgresql.conf"
  when: app_fightfor_orm.is_vagrant is defined and app_fightfor_orm.is_vagrant == True

- name: Install system-level Python dependencies
  pip:
    name: "{{ item }}"
    state: latest
  with_items: "{{ app_fightfor_orm.dependencies_pip_system }}"
  become: true

- name: Install deployment-level pip dependencies not included in a `requirements.txt` within the virtual environment
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ app_fightfor_orm.virtual_env_dir }}"
    virtualenv_python: python3.5
  with_items: "{{ app_fightfor_orm.dependencies_pip_virtualenv }}"
  become: true
  become_user: "{{ app_fightfor_orm.user }}"

- name: Create configuration file (Development)
  template:
    src: "config_dev.json.j2"
    dest: "{{ app_fightfor_orm.config_dir }}/fightfor-orm.json"
    owner: "{{ app_fightfor_orm.user }}"
    group: "{{ app_fightfor_orm.group }}"
    mode: 0600
  become: true
  become_user: "{{ app_fightfor_orm.user }}"
  when: app_fightfor_orm.is_vagrant is defined and app_fightfor_orm.is_vagrant == True

- name: Install Python package requirements (Development)
  pip:
    chdir: "/home/vagrant/fightfor-orm"
    requirements: requirements_dev.txt
    state: latest
    virtualenv: "{{ app_fightfor_orm.virtual_env_dir }}"
    virtualenv_python: python2.7
  when: app_fightfor_orm.is_vagrant is defined and app_fightfor_orm.is_vagrant == True
  become: true
  become_user: "{{ app_fightfor_orm.user }}"
